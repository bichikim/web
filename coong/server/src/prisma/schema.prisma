datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

generator typegraphql {
  provider = "typegraphql-prisma"
  output   = "./type-graphql"
}

model User {
  id           Int    @id @default(autoincrement())
  email        String    @unique
  name         String?
  /// @TypeGraphQL.omit(output: true)
  password     String?
  followers    User[]    @relation("UserFollows")
  following    User[]    @relation("UserFollows")

  likePosts    Post[]    @relation("Likes")
  posts        Post[]    @relation("PostAuthor")
  comments     Comment[] @relation("CommentAuthor")
  /// @TypeGraphQL.omit(output: true)
  roles        String[]
}

model Post {
  id       Int    @id @default(autoincrement())
  title    String
  message  String?
  author   User      @relation("PostAuthor", fields: [authorId], references: [id])
  authorId Int
  likes    User[]    @relation("Likes")
  tags     Tag[]     @relation("Tags")
  comments Comment[] @relation("Comments")
}

model Comment {
  id       Int @id @default(autoincrement())
  message  String
  post     Post   @relation("Comments", fields: [postId], references: [id])
  postId Int
  author   User   @relation("CommentAuthor", fields: [authorId], references: [id])
  authorId Int
}

model Tag {
  id      Int   @id @default(autoincrement())
  name    String
  posts   Post[]   @relation("Tags")
}
