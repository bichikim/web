datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

generator typegraphql {
  provider = "typegraphql-prisma"
  output   = "./type-graphql"
}

model User {
  id           String    @id @default(auto()) @map("_id") @db.ObjectId
  email        String    @unique
  name         String?
  /// @TypeGraphQL.omit(output: true)
  password     String?
  followers    User[]    @relation("UserFollows", fields: [followerIDs], references: [id])
  followerIDs  String[]  @db.ObjectId()
  following    User[]    @relation("UserFollows", fields: [followingIDs], references: [id])
  followingIDs String[]  @db.ObjectId()
  likePosts    Post[]    @relation("Likes", fields: [likePostIDs], references: [id])
  likePostIDs  String[]  @db.ObjectId()
  posts        Post[]    @relation("PostAuthor")
  comments     Comment[] @relation("CommentAuthor")
  /// @TypeGraphQL.omit(output: true)
  roles        String[]
}

model Post {
  id       String    @id @default(auto()) @map("_id") @db.ObjectId
  title    String
  message  String?
  author   User      @relation("PostAuthor", fields: [authorId], references: [id])
  authorId String    @db.ObjectId
  likes    User[]    @relation("Likes", fields: [likeIDs], references: [id])
  likeIDs  String[]  @db.ObjectId()
  tags     Tag[]     @relation("Tags", references: [id], fields: [tagIDs])
  tagIDs   String[]  @db.ObjectId()
  comments Comment[] @relation("Comments")
}

model Comment {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  message  String
  port     Post   @relation("Comments", references: [id], fields: [postId])
  postId   String @db.ObjectId
  author   User   @relation("CommentAuthor", fields: [authorId], references: [id])
  authorId String @db.ObjectId
}

model Tag {
  id      String   @id @default(auto()) @map("_id") @db.ObjectId
  name    String
  posts   Post[]   @relation("Tags", references: [id], fields: [postIDs])
  postIDs String[] @db.ObjectId()
}
