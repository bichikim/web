// ts-gql-integrity:567f7450da395da52f5bcb6eddabbd79
/*
ts-gql-meta-begin
{
  "hash": "4f8b17bd0e3903dd7b6050f1b9d36407"
}
ts-gql-meta-end
*/
/** @deprecated This should not be used outside of code generated by ts-gql */
export type Maybe<T> = T | null;
/** @deprecated This should not be used outside of code generated by ts-gql */
export type InputMaybe<T> = Maybe<T>;
/** @deprecated This should not be used outside of code generated by ts-gql */
export type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };
/** @deprecated This should not be used outside of code generated by ts-gql */
export type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };
/** @deprecated This should not be used outside of code generated by ts-gql */
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };

/** @deprecated This should not be used outside of code generated by ts-gql */
export type Scalars = {
  String: string;
  Int: number;
  Float: number;
  Boolean: boolean;
  ID: string;
};

export type CommentCountOrderByAggregateInput = {
  readonly authorId?: SortOrder | null;
  readonly id?: SortOrder | null;
  readonly message?: SortOrder | null;
  readonly postId?: SortOrder | null;
};

export type CommentCreateInput = {
  readonly author: UserCreateNestedOneWithoutCommentsInput;
  readonly id?: string | null;
  readonly message: string;
  readonly port: PostCreateNestedOneWithoutCommentsInput;
};

export type CommentCreateManyAuthorInput = {
  readonly id?: string | null;
  readonly message: string;
  readonly postId: string;
};

export type CommentCreateManyAuthorInputEnvelope = {
  readonly data: TSGQLMaybeArray<CommentCreateManyAuthorInput>;
};

export type CommentCreateManyInput = {
  readonly authorId: string;
  readonly id?: string | null;
  readonly message: string;
  readonly postId: string;
};

export type CommentCreateManyPortInput = {
  readonly authorId: string;
  readonly id?: string | null;
  readonly message: string;
};

export type CommentCreateManyPortInputEnvelope = {
  readonly data: TSGQLMaybeArray<CommentCreateManyPortInput>;
};

export type CommentCreateNestedManyWithoutAuthorInput = {
  readonly connect?: TSGQLMaybeArray<CommentWhereUniqueInput> | null;
  readonly connectOrCreate?: TSGQLMaybeArray<CommentCreateOrConnectWithoutAuthorInput> | null;
  readonly create?: TSGQLMaybeArray<CommentCreateWithoutAuthorInput> | null;
  readonly createMany?: CommentCreateManyAuthorInputEnvelope | null;
};

export type CommentCreateNestedManyWithoutPortInput = {
  readonly connect?: TSGQLMaybeArray<CommentWhereUniqueInput> | null;
  readonly connectOrCreate?: TSGQLMaybeArray<CommentCreateOrConnectWithoutPortInput> | null;
  readonly create?: TSGQLMaybeArray<CommentCreateWithoutPortInput> | null;
  readonly createMany?: CommentCreateManyPortInputEnvelope | null;
};

export type CommentCreateOrConnectWithoutAuthorInput = {
  readonly create: CommentCreateWithoutAuthorInput;
  readonly where: CommentWhereUniqueInput;
};

export type CommentCreateOrConnectWithoutPortInput = {
  readonly create: CommentCreateWithoutPortInput;
  readonly where: CommentWhereUniqueInput;
};

export type CommentCreateWithoutAuthorInput = {
  readonly id?: string | null;
  readonly message: string;
  readonly port: PostCreateNestedOneWithoutCommentsInput;
};

export type CommentCreateWithoutPortInput = {
  readonly author: UserCreateNestedOneWithoutCommentsInput;
  readonly id?: string | null;
  readonly message: string;
};

export type CommentListRelationFilter = {
  readonly every?: CommentWhereInput | null;
  readonly none?: CommentWhereInput | null;
  readonly some?: CommentWhereInput | null;
};

export type CommentMaxOrderByAggregateInput = {
  readonly authorId?: SortOrder | null;
  readonly id?: SortOrder | null;
  readonly message?: SortOrder | null;
  readonly postId?: SortOrder | null;
};

export type CommentMinOrderByAggregateInput = {
  readonly authorId?: SortOrder | null;
  readonly id?: SortOrder | null;
  readonly message?: SortOrder | null;
  readonly postId?: SortOrder | null;
};

export type CommentOrderByRelationAggregateInput = {
  readonly _count?: SortOrder | null;
};

export type CommentOrderByWithAggregationInput = {
  readonly _count?: CommentCountOrderByAggregateInput | null;
  readonly _max?: CommentMaxOrderByAggregateInput | null;
  readonly _min?: CommentMinOrderByAggregateInput | null;
  readonly authorId?: SortOrder | null;
  readonly id?: SortOrder | null;
  readonly message?: SortOrder | null;
  readonly postId?: SortOrder | null;
};

export type CommentOrderByWithRelationInput = {
  readonly author?: UserOrderByWithRelationInput | null;
  readonly authorId?: SortOrder | null;
  readonly id?: SortOrder | null;
  readonly message?: SortOrder | null;
  readonly port?: PostOrderByWithRelationInput | null;
  readonly postId?: SortOrder | null;
};

type CommentScalarFieldEnum =   | "authorId"
  | "id"
  | "message"
  | "postId";

export type CommentScalarWhereInput = {
  readonly AND?: TSGQLMaybeArray<CommentScalarWhereInput> | null;
  readonly NOT?: TSGQLMaybeArray<CommentScalarWhereInput> | null;
  readonly OR?: TSGQLMaybeArray<CommentScalarWhereInput> | null;
  readonly authorId?: StringFilter | null;
  readonly id?: StringFilter | null;
  readonly message?: StringFilter | null;
  readonly postId?: StringFilter | null;
};

export type CommentScalarWhereWithAggregatesInput = {
  readonly AND?: TSGQLMaybeArray<CommentScalarWhereWithAggregatesInput> | null;
  readonly NOT?: TSGQLMaybeArray<CommentScalarWhereWithAggregatesInput> | null;
  readonly OR?: TSGQLMaybeArray<CommentScalarWhereWithAggregatesInput> | null;
  readonly authorId?: StringWithAggregatesFilter | null;
  readonly id?: StringWithAggregatesFilter | null;
  readonly message?: StringWithAggregatesFilter | null;
  readonly postId?: StringWithAggregatesFilter | null;
};

export type CommentUpdateInput = {
  readonly author?: UserUpdateOneRequiredWithoutCommentsNestedInput | null;
  readonly message?: StringFieldUpdateOperationsInput | null;
  readonly port?: PostUpdateOneRequiredWithoutCommentsNestedInput | null;
};

export type CommentUpdateManyMutationInput = {
  readonly message?: StringFieldUpdateOperationsInput | null;
};

export type CommentUpdateManyWithWhereWithoutAuthorInput = {
  readonly data: CommentUpdateManyMutationInput;
  readonly where: CommentScalarWhereInput;
};

export type CommentUpdateManyWithWhereWithoutPortInput = {
  readonly data: CommentUpdateManyMutationInput;
  readonly where: CommentScalarWhereInput;
};

export type CommentUpdateManyWithoutAuthorNestedInput = {
  readonly connect?: TSGQLMaybeArray<CommentWhereUniqueInput> | null;
  readonly connectOrCreate?: TSGQLMaybeArray<CommentCreateOrConnectWithoutAuthorInput> | null;
  readonly create?: TSGQLMaybeArray<CommentCreateWithoutAuthorInput> | null;
  readonly createMany?: CommentCreateManyAuthorInputEnvelope | null;
  readonly delete?: TSGQLMaybeArray<CommentWhereUniqueInput> | null;
  readonly deleteMany?: TSGQLMaybeArray<CommentScalarWhereInput> | null;
  readonly disconnect?: TSGQLMaybeArray<CommentWhereUniqueInput> | null;
  readonly set?: TSGQLMaybeArray<CommentWhereUniqueInput> | null;
  readonly update?: TSGQLMaybeArray<CommentUpdateWithWhereUniqueWithoutAuthorInput> | null;
  readonly updateMany?: TSGQLMaybeArray<CommentUpdateManyWithWhereWithoutAuthorInput> | null;
  readonly upsert?: TSGQLMaybeArray<CommentUpsertWithWhereUniqueWithoutAuthorInput> | null;
};

export type CommentUpdateManyWithoutPortNestedInput = {
  readonly connect?: TSGQLMaybeArray<CommentWhereUniqueInput> | null;
  readonly connectOrCreate?: TSGQLMaybeArray<CommentCreateOrConnectWithoutPortInput> | null;
  readonly create?: TSGQLMaybeArray<CommentCreateWithoutPortInput> | null;
  readonly createMany?: CommentCreateManyPortInputEnvelope | null;
  readonly delete?: TSGQLMaybeArray<CommentWhereUniqueInput> | null;
  readonly deleteMany?: TSGQLMaybeArray<CommentScalarWhereInput> | null;
  readonly disconnect?: TSGQLMaybeArray<CommentWhereUniqueInput> | null;
  readonly set?: TSGQLMaybeArray<CommentWhereUniqueInput> | null;
  readonly update?: TSGQLMaybeArray<CommentUpdateWithWhereUniqueWithoutPortInput> | null;
  readonly updateMany?: TSGQLMaybeArray<CommentUpdateManyWithWhereWithoutPortInput> | null;
  readonly upsert?: TSGQLMaybeArray<CommentUpsertWithWhereUniqueWithoutPortInput> | null;
};

export type CommentUpdateWithWhereUniqueWithoutAuthorInput = {
  readonly data: CommentUpdateWithoutAuthorInput;
  readonly where: CommentWhereUniqueInput;
};

export type CommentUpdateWithWhereUniqueWithoutPortInput = {
  readonly data: CommentUpdateWithoutPortInput;
  readonly where: CommentWhereUniqueInput;
};

export type CommentUpdateWithoutAuthorInput = {
  readonly message?: StringFieldUpdateOperationsInput | null;
  readonly port?: PostUpdateOneRequiredWithoutCommentsNestedInput | null;
};

export type CommentUpdateWithoutPortInput = {
  readonly author?: UserUpdateOneRequiredWithoutCommentsNestedInput | null;
  readonly message?: StringFieldUpdateOperationsInput | null;
};

export type CommentUpsertWithWhereUniqueWithoutAuthorInput = {
  readonly create: CommentCreateWithoutAuthorInput;
  readonly update: CommentUpdateWithoutAuthorInput;
  readonly where: CommentWhereUniqueInput;
};

export type CommentUpsertWithWhereUniqueWithoutPortInput = {
  readonly create: CommentCreateWithoutPortInput;
  readonly update: CommentUpdateWithoutPortInput;
  readonly where: CommentWhereUniqueInput;
};

export type CommentWhereInput = {
  readonly AND?: TSGQLMaybeArray<CommentWhereInput> | null;
  readonly NOT?: TSGQLMaybeArray<CommentWhereInput> | null;
  readonly OR?: TSGQLMaybeArray<CommentWhereInput> | null;
  readonly author?: UserRelationFilter | null;
  readonly authorId?: StringFilter | null;
  readonly id?: StringFilter | null;
  readonly message?: StringFilter | null;
  readonly port?: PostRelationFilter | null;
  readonly postId?: StringFilter | null;
};

export type CommentWhereUniqueInput = {
  readonly id?: string | null;
};

export type NestedIntFilter = {
  readonly equals?: number | null;
  readonly gt?: number | null;
  readonly gte?: number | null;
  readonly in?: TSGQLMaybeArray<number> | null;
  readonly lt?: number | null;
  readonly lte?: number | null;
  readonly not?: NestedIntFilter | null;
  readonly notIn?: TSGQLMaybeArray<number> | null;
};

export type NestedIntNullableFilter = {
  readonly equals?: number | null;
  readonly gt?: number | null;
  readonly gte?: number | null;
  readonly in?: TSGQLMaybeArray<number> | null;
  readonly isSet?: boolean | null;
  readonly lt?: number | null;
  readonly lte?: number | null;
  readonly not?: NestedIntNullableFilter | null;
  readonly notIn?: TSGQLMaybeArray<number> | null;
};

export type NestedStringFilter = {
  readonly contains?: string | null;
  readonly endsWith?: string | null;
  readonly equals?: string | null;
  readonly gt?: string | null;
  readonly gte?: string | null;
  readonly in?: TSGQLMaybeArray<string> | null;
  readonly lt?: string | null;
  readonly lte?: string | null;
  readonly not?: NestedStringFilter | null;
  readonly notIn?: TSGQLMaybeArray<string> | null;
  readonly startsWith?: string | null;
};

export type NestedStringNullableFilter = {
  readonly contains?: string | null;
  readonly endsWith?: string | null;
  readonly equals?: string | null;
  readonly gt?: string | null;
  readonly gte?: string | null;
  readonly in?: TSGQLMaybeArray<string> | null;
  readonly isSet?: boolean | null;
  readonly lt?: string | null;
  readonly lte?: string | null;
  readonly not?: NestedStringNullableFilter | null;
  readonly notIn?: TSGQLMaybeArray<string> | null;
  readonly startsWith?: string | null;
};

export type NestedStringNullableWithAggregatesFilter = {
  readonly _count?: NestedIntNullableFilter | null;
  readonly _max?: NestedStringNullableFilter | null;
  readonly _min?: NestedStringNullableFilter | null;
  readonly contains?: string | null;
  readonly endsWith?: string | null;
  readonly equals?: string | null;
  readonly gt?: string | null;
  readonly gte?: string | null;
  readonly in?: TSGQLMaybeArray<string> | null;
  readonly isSet?: boolean | null;
  readonly lt?: string | null;
  readonly lte?: string | null;
  readonly not?: NestedStringNullableWithAggregatesFilter | null;
  readonly notIn?: TSGQLMaybeArray<string> | null;
  readonly startsWith?: string | null;
};

export type NestedStringWithAggregatesFilter = {
  readonly _count?: NestedIntFilter | null;
  readonly _max?: NestedStringFilter | null;
  readonly _min?: NestedStringFilter | null;
  readonly contains?: string | null;
  readonly endsWith?: string | null;
  readonly equals?: string | null;
  readonly gt?: string | null;
  readonly gte?: string | null;
  readonly in?: TSGQLMaybeArray<string> | null;
  readonly lt?: string | null;
  readonly lte?: string | null;
  readonly not?: NestedStringWithAggregatesFilter | null;
  readonly notIn?: TSGQLMaybeArray<string> | null;
  readonly startsWith?: string | null;
};

export type NullableStringFieldUpdateOperationsInput = {
  readonly set?: string | null;
  readonly unset?: boolean | null;
};

export type PostCountOrderByAggregateInput = {
  readonly authorId?: SortOrder | null;
  readonly id?: SortOrder | null;
  readonly likeIDs?: SortOrder | null;
  readonly message?: SortOrder | null;
  readonly tagIDs?: SortOrder | null;
  readonly title?: SortOrder | null;
};

export type PostCreateInput = {
  readonly author: UserCreateNestedOneWithoutPostsInput;
  readonly comments?: CommentCreateNestedManyWithoutPortInput | null;
  readonly id?: string | null;
  readonly likeIDs?: PostCreatelikeIDsInput | null;
  readonly likes?: UserCreateNestedManyWithoutLikePostsInput | null;
  readonly message?: string | null;
  readonly tagIDs?: PostCreatetagIDsInput | null;
  readonly tags?: TagCreateNestedManyWithoutPostsInput | null;
  readonly title: string;
};

export type PostCreateManyAuthorInput = {
  readonly id?: string | null;
  readonly likeIDs?: PostCreatelikeIDsInput | null;
  readonly message?: string | null;
  readonly tagIDs?: PostCreatetagIDsInput | null;
  readonly title: string;
};

export type PostCreateManyAuthorInputEnvelope = {
  readonly data: TSGQLMaybeArray<PostCreateManyAuthorInput>;
};

export type PostCreateManyInput = {
  readonly authorId: string;
  readonly id?: string | null;
  readonly likeIDs?: PostCreatelikeIDsInput | null;
  readonly message?: string | null;
  readonly tagIDs?: PostCreatetagIDsInput | null;
  readonly title: string;
};

export type PostCreateNestedManyWithoutAuthorInput = {
  readonly connect?: TSGQLMaybeArray<PostWhereUniqueInput> | null;
  readonly connectOrCreate?: TSGQLMaybeArray<PostCreateOrConnectWithoutAuthorInput> | null;
  readonly create?: TSGQLMaybeArray<PostCreateWithoutAuthorInput> | null;
  readonly createMany?: PostCreateManyAuthorInputEnvelope | null;
};

export type PostCreateNestedManyWithoutLikesInput = {
  readonly connect?: TSGQLMaybeArray<PostWhereUniqueInput> | null;
  readonly connectOrCreate?: TSGQLMaybeArray<PostCreateOrConnectWithoutLikesInput> | null;
  readonly create?: TSGQLMaybeArray<PostCreateWithoutLikesInput> | null;
};

export type PostCreateNestedManyWithoutTagsInput = {
  readonly connect?: TSGQLMaybeArray<PostWhereUniqueInput> | null;
  readonly connectOrCreate?: TSGQLMaybeArray<PostCreateOrConnectWithoutTagsInput> | null;
  readonly create?: TSGQLMaybeArray<PostCreateWithoutTagsInput> | null;
};

export type PostCreateNestedOneWithoutCommentsInput = {
  readonly connect?: PostWhereUniqueInput | null;
  readonly connectOrCreate?: PostCreateOrConnectWithoutCommentsInput | null;
  readonly create?: PostCreateWithoutCommentsInput | null;
};

export type PostCreateOrConnectWithoutAuthorInput = {
  readonly create: PostCreateWithoutAuthorInput;
  readonly where: PostWhereUniqueInput;
};

export type PostCreateOrConnectWithoutCommentsInput = {
  readonly create: PostCreateWithoutCommentsInput;
  readonly where: PostWhereUniqueInput;
};

export type PostCreateOrConnectWithoutLikesInput = {
  readonly create: PostCreateWithoutLikesInput;
  readonly where: PostWhereUniqueInput;
};

export type PostCreateOrConnectWithoutTagsInput = {
  readonly create: PostCreateWithoutTagsInput;
  readonly where: PostWhereUniqueInput;
};

export type PostCreateWithoutAuthorInput = {
  readonly comments?: CommentCreateNestedManyWithoutPortInput | null;
  readonly id?: string | null;
  readonly likeIDs?: PostCreatelikeIDsInput | null;
  readonly likes?: UserCreateNestedManyWithoutLikePostsInput | null;
  readonly message?: string | null;
  readonly tagIDs?: PostCreatetagIDsInput | null;
  readonly tags?: TagCreateNestedManyWithoutPostsInput | null;
  readonly title: string;
};

export type PostCreateWithoutCommentsInput = {
  readonly author: UserCreateNestedOneWithoutPostsInput;
  readonly id?: string | null;
  readonly likeIDs?: PostCreatelikeIDsInput | null;
  readonly likes?: UserCreateNestedManyWithoutLikePostsInput | null;
  readonly message?: string | null;
  readonly tagIDs?: PostCreatetagIDsInput | null;
  readonly tags?: TagCreateNestedManyWithoutPostsInput | null;
  readonly title: string;
};

export type PostCreateWithoutLikesInput = {
  readonly author: UserCreateNestedOneWithoutPostsInput;
  readonly comments?: CommentCreateNestedManyWithoutPortInput | null;
  readonly id?: string | null;
  readonly likeIDs?: PostCreatelikeIDsInput | null;
  readonly message?: string | null;
  readonly tagIDs?: PostCreatetagIDsInput | null;
  readonly tags?: TagCreateNestedManyWithoutPostsInput | null;
  readonly title: string;
};

export type PostCreateWithoutTagsInput = {
  readonly author: UserCreateNestedOneWithoutPostsInput;
  readonly comments?: CommentCreateNestedManyWithoutPortInput | null;
  readonly id?: string | null;
  readonly likeIDs?: PostCreatelikeIDsInput | null;
  readonly likes?: UserCreateNestedManyWithoutLikePostsInput | null;
  readonly message?: string | null;
  readonly tagIDs?: PostCreatetagIDsInput | null;
  readonly title: string;
};

export type PostCreatelikeIDsInput = {
  readonly set: TSGQLMaybeArray<string>;
};

export type PostCreatetagIDsInput = {
  readonly set: TSGQLMaybeArray<string>;
};

export type PostListRelationFilter = {
  readonly every?: PostWhereInput | null;
  readonly none?: PostWhereInput | null;
  readonly some?: PostWhereInput | null;
};

export type PostMaxOrderByAggregateInput = {
  readonly authorId?: SortOrder | null;
  readonly id?: SortOrder | null;
  readonly message?: SortOrder | null;
  readonly title?: SortOrder | null;
};

export type PostMinOrderByAggregateInput = {
  readonly authorId?: SortOrder | null;
  readonly id?: SortOrder | null;
  readonly message?: SortOrder | null;
  readonly title?: SortOrder | null;
};

export type PostOrderByRelationAggregateInput = {
  readonly _count?: SortOrder | null;
};

export type PostOrderByWithAggregationInput = {
  readonly _count?: PostCountOrderByAggregateInput | null;
  readonly _max?: PostMaxOrderByAggregateInput | null;
  readonly _min?: PostMinOrderByAggregateInput | null;
  readonly authorId?: SortOrder | null;
  readonly id?: SortOrder | null;
  readonly likeIDs?: SortOrder | null;
  readonly message?: SortOrder | null;
  readonly tagIDs?: SortOrder | null;
  readonly title?: SortOrder | null;
};

export type PostOrderByWithRelationInput = {
  readonly author?: UserOrderByWithRelationInput | null;
  readonly authorId?: SortOrder | null;
  readonly comments?: CommentOrderByRelationAggregateInput | null;
  readonly id?: SortOrder | null;
  readonly likeIDs?: SortOrder | null;
  readonly likes?: UserOrderByRelationAggregateInput | null;
  readonly message?: SortOrder | null;
  readonly tagIDs?: SortOrder | null;
  readonly tags?: TagOrderByRelationAggregateInput | null;
  readonly title?: SortOrder | null;
};

export type PostRelationFilter = {
  readonly is?: PostWhereInput | null;
  readonly isNot?: PostWhereInput | null;
};

type PostScalarFieldEnum =   | "authorId"
  | "id"
  | "likeIDs"
  | "message"
  | "tagIDs"
  | "title";

export type PostScalarWhereInput = {
  readonly AND?: TSGQLMaybeArray<PostScalarWhereInput> | null;
  readonly NOT?: TSGQLMaybeArray<PostScalarWhereInput> | null;
  readonly OR?: TSGQLMaybeArray<PostScalarWhereInput> | null;
  readonly authorId?: StringFilter | null;
  readonly id?: StringFilter | null;
  readonly likeIDs?: StringNullableListFilter | null;
  readonly message?: StringNullableFilter | null;
  readonly tagIDs?: StringNullableListFilter | null;
  readonly title?: StringFilter | null;
};

export type PostScalarWhereWithAggregatesInput = {
  readonly AND?: TSGQLMaybeArray<PostScalarWhereWithAggregatesInput> | null;
  readonly NOT?: TSGQLMaybeArray<PostScalarWhereWithAggregatesInput> | null;
  readonly OR?: TSGQLMaybeArray<PostScalarWhereWithAggregatesInput> | null;
  readonly authorId?: StringWithAggregatesFilter | null;
  readonly id?: StringWithAggregatesFilter | null;
  readonly likeIDs?: StringNullableListFilter | null;
  readonly message?: StringNullableWithAggregatesFilter | null;
  readonly tagIDs?: StringNullableListFilter | null;
  readonly title?: StringWithAggregatesFilter | null;
};

export type PostUpdateInput = {
  readonly author?: UserUpdateOneRequiredWithoutPostsNestedInput | null;
  readonly comments?: CommentUpdateManyWithoutPortNestedInput | null;
  readonly likeIDs?: PostUpdatelikeIDsInput | null;
  readonly likes?: UserUpdateManyWithoutLikePostsNestedInput | null;
  readonly message?: NullableStringFieldUpdateOperationsInput | null;
  readonly tagIDs?: PostUpdatetagIDsInput | null;
  readonly tags?: TagUpdateManyWithoutPostsNestedInput | null;
  readonly title?: StringFieldUpdateOperationsInput | null;
};

export type PostUpdateManyMutationInput = {
  readonly likeIDs?: PostUpdatelikeIDsInput | null;
  readonly message?: NullableStringFieldUpdateOperationsInput | null;
  readonly tagIDs?: PostUpdatetagIDsInput | null;
  readonly title?: StringFieldUpdateOperationsInput | null;
};

export type PostUpdateManyWithWhereWithoutAuthorInput = {
  readonly data: PostUpdateManyMutationInput;
  readonly where: PostScalarWhereInput;
};

export type PostUpdateManyWithWhereWithoutLikesInput = {
  readonly data: PostUpdateManyMutationInput;
  readonly where: PostScalarWhereInput;
};

export type PostUpdateManyWithWhereWithoutTagsInput = {
  readonly data: PostUpdateManyMutationInput;
  readonly where: PostScalarWhereInput;
};

export type PostUpdateManyWithoutAuthorNestedInput = {
  readonly connect?: TSGQLMaybeArray<PostWhereUniqueInput> | null;
  readonly connectOrCreate?: TSGQLMaybeArray<PostCreateOrConnectWithoutAuthorInput> | null;
  readonly create?: TSGQLMaybeArray<PostCreateWithoutAuthorInput> | null;
  readonly createMany?: PostCreateManyAuthorInputEnvelope | null;
  readonly delete?: TSGQLMaybeArray<PostWhereUniqueInput> | null;
  readonly deleteMany?: TSGQLMaybeArray<PostScalarWhereInput> | null;
  readonly disconnect?: TSGQLMaybeArray<PostWhereUniqueInput> | null;
  readonly set?: TSGQLMaybeArray<PostWhereUniqueInput> | null;
  readonly update?: TSGQLMaybeArray<PostUpdateWithWhereUniqueWithoutAuthorInput> | null;
  readonly updateMany?: TSGQLMaybeArray<PostUpdateManyWithWhereWithoutAuthorInput> | null;
  readonly upsert?: TSGQLMaybeArray<PostUpsertWithWhereUniqueWithoutAuthorInput> | null;
};

export type PostUpdateManyWithoutLikesNestedInput = {
  readonly connect?: TSGQLMaybeArray<PostWhereUniqueInput> | null;
  readonly connectOrCreate?: TSGQLMaybeArray<PostCreateOrConnectWithoutLikesInput> | null;
  readonly create?: TSGQLMaybeArray<PostCreateWithoutLikesInput> | null;
  readonly delete?: TSGQLMaybeArray<PostWhereUniqueInput> | null;
  readonly deleteMany?: TSGQLMaybeArray<PostScalarWhereInput> | null;
  readonly disconnect?: TSGQLMaybeArray<PostWhereUniqueInput> | null;
  readonly set?: TSGQLMaybeArray<PostWhereUniqueInput> | null;
  readonly update?: TSGQLMaybeArray<PostUpdateWithWhereUniqueWithoutLikesInput> | null;
  readonly updateMany?: TSGQLMaybeArray<PostUpdateManyWithWhereWithoutLikesInput> | null;
  readonly upsert?: TSGQLMaybeArray<PostUpsertWithWhereUniqueWithoutLikesInput> | null;
};

export type PostUpdateManyWithoutTagsNestedInput = {
  readonly connect?: TSGQLMaybeArray<PostWhereUniqueInput> | null;
  readonly connectOrCreate?: TSGQLMaybeArray<PostCreateOrConnectWithoutTagsInput> | null;
  readonly create?: TSGQLMaybeArray<PostCreateWithoutTagsInput> | null;
  readonly delete?: TSGQLMaybeArray<PostWhereUniqueInput> | null;
  readonly deleteMany?: TSGQLMaybeArray<PostScalarWhereInput> | null;
  readonly disconnect?: TSGQLMaybeArray<PostWhereUniqueInput> | null;
  readonly set?: TSGQLMaybeArray<PostWhereUniqueInput> | null;
  readonly update?: TSGQLMaybeArray<PostUpdateWithWhereUniqueWithoutTagsInput> | null;
  readonly updateMany?: TSGQLMaybeArray<PostUpdateManyWithWhereWithoutTagsInput> | null;
  readonly upsert?: TSGQLMaybeArray<PostUpsertWithWhereUniqueWithoutTagsInput> | null;
};

export type PostUpdateOneRequiredWithoutCommentsNestedInput = {
  readonly connect?: PostWhereUniqueInput | null;
  readonly connectOrCreate?: PostCreateOrConnectWithoutCommentsInput | null;
  readonly create?: PostCreateWithoutCommentsInput | null;
  readonly update?: PostUpdateWithoutCommentsInput | null;
  readonly upsert?: PostUpsertWithoutCommentsInput | null;
};

export type PostUpdateWithWhereUniqueWithoutAuthorInput = {
  readonly data: PostUpdateWithoutAuthorInput;
  readonly where: PostWhereUniqueInput;
};

export type PostUpdateWithWhereUniqueWithoutLikesInput = {
  readonly data: PostUpdateWithoutLikesInput;
  readonly where: PostWhereUniqueInput;
};

export type PostUpdateWithWhereUniqueWithoutTagsInput = {
  readonly data: PostUpdateWithoutTagsInput;
  readonly where: PostWhereUniqueInput;
};

export type PostUpdateWithoutAuthorInput = {
  readonly comments?: CommentUpdateManyWithoutPortNestedInput | null;
  readonly likeIDs?: PostUpdatelikeIDsInput | null;
  readonly likes?: UserUpdateManyWithoutLikePostsNestedInput | null;
  readonly message?: NullableStringFieldUpdateOperationsInput | null;
  readonly tagIDs?: PostUpdatetagIDsInput | null;
  readonly tags?: TagUpdateManyWithoutPostsNestedInput | null;
  readonly title?: StringFieldUpdateOperationsInput | null;
};

export type PostUpdateWithoutCommentsInput = {
  readonly author?: UserUpdateOneRequiredWithoutPostsNestedInput | null;
  readonly likeIDs?: PostUpdatelikeIDsInput | null;
  readonly likes?: UserUpdateManyWithoutLikePostsNestedInput | null;
  readonly message?: NullableStringFieldUpdateOperationsInput | null;
  readonly tagIDs?: PostUpdatetagIDsInput | null;
  readonly tags?: TagUpdateManyWithoutPostsNestedInput | null;
  readonly title?: StringFieldUpdateOperationsInput | null;
};

export type PostUpdateWithoutLikesInput = {
  readonly author?: UserUpdateOneRequiredWithoutPostsNestedInput | null;
  readonly comments?: CommentUpdateManyWithoutPortNestedInput | null;
  readonly likeIDs?: PostUpdatelikeIDsInput | null;
  readonly message?: NullableStringFieldUpdateOperationsInput | null;
  readonly tagIDs?: PostUpdatetagIDsInput | null;
  readonly tags?: TagUpdateManyWithoutPostsNestedInput | null;
  readonly title?: StringFieldUpdateOperationsInput | null;
};

export type PostUpdateWithoutTagsInput = {
  readonly author?: UserUpdateOneRequiredWithoutPostsNestedInput | null;
  readonly comments?: CommentUpdateManyWithoutPortNestedInput | null;
  readonly likeIDs?: PostUpdatelikeIDsInput | null;
  readonly likes?: UserUpdateManyWithoutLikePostsNestedInput | null;
  readonly message?: NullableStringFieldUpdateOperationsInput | null;
  readonly tagIDs?: PostUpdatetagIDsInput | null;
  readonly title?: StringFieldUpdateOperationsInput | null;
};

export type PostUpdatelikeIDsInput = {
  readonly push?: TSGQLMaybeArray<string> | null;
  readonly set?: TSGQLMaybeArray<string> | null;
};

export type PostUpdatetagIDsInput = {
  readonly push?: TSGQLMaybeArray<string> | null;
  readonly set?: TSGQLMaybeArray<string> | null;
};

export type PostUpsertWithWhereUniqueWithoutAuthorInput = {
  readonly create: PostCreateWithoutAuthorInput;
  readonly update: PostUpdateWithoutAuthorInput;
  readonly where: PostWhereUniqueInput;
};

export type PostUpsertWithWhereUniqueWithoutLikesInput = {
  readonly create: PostCreateWithoutLikesInput;
  readonly update: PostUpdateWithoutLikesInput;
  readonly where: PostWhereUniqueInput;
};

export type PostUpsertWithWhereUniqueWithoutTagsInput = {
  readonly create: PostCreateWithoutTagsInput;
  readonly update: PostUpdateWithoutTagsInput;
  readonly where: PostWhereUniqueInput;
};

export type PostUpsertWithoutCommentsInput = {
  readonly create: PostCreateWithoutCommentsInput;
  readonly update: PostUpdateWithoutCommentsInput;
};

export type PostWhereInput = {
  readonly AND?: TSGQLMaybeArray<PostWhereInput> | null;
  readonly NOT?: TSGQLMaybeArray<PostWhereInput> | null;
  readonly OR?: TSGQLMaybeArray<PostWhereInput> | null;
  readonly author?: UserRelationFilter | null;
  readonly authorId?: StringFilter | null;
  readonly comments?: CommentListRelationFilter | null;
  readonly id?: StringFilter | null;
  readonly likeIDs?: StringNullableListFilter | null;
  readonly likes?: UserListRelationFilter | null;
  readonly message?: StringNullableFilter | null;
  readonly tagIDs?: StringNullableListFilter | null;
  readonly tags?: TagListRelationFilter | null;
  readonly title?: StringFilter | null;
};

export type PostWhereUniqueInput = {
  readonly id?: string | null;
};

type QueryMode =   | "default"
  | "insensitive";

export type SignInInput = {
  readonly email: string;
  readonly password: string;
};

export type SignUpInput = {
  readonly email: string;
  readonly name?: string | null;
  readonly password: string;
};

type SortOrder =   | "asc"
  | "desc";

export type StringFieldUpdateOperationsInput = {
  readonly set?: string | null;
};

export type StringFilter = {
  readonly contains?: string | null;
  readonly endsWith?: string | null;
  readonly equals?: string | null;
  readonly gt?: string | null;
  readonly gte?: string | null;
  readonly in?: TSGQLMaybeArray<string> | null;
  readonly lt?: string | null;
  readonly lte?: string | null;
  readonly mode?: QueryMode | null;
  readonly not?: NestedStringFilter | null;
  readonly notIn?: TSGQLMaybeArray<string> | null;
  readonly startsWith?: string | null;
};

export type StringNullableFilter = {
  readonly contains?: string | null;
  readonly endsWith?: string | null;
  readonly equals?: string | null;
  readonly gt?: string | null;
  readonly gte?: string | null;
  readonly in?: TSGQLMaybeArray<string> | null;
  readonly isSet?: boolean | null;
  readonly lt?: string | null;
  readonly lte?: string | null;
  readonly mode?: QueryMode | null;
  readonly not?: NestedStringNullableFilter | null;
  readonly notIn?: TSGQLMaybeArray<string> | null;
  readonly startsWith?: string | null;
};

export type StringNullableListFilter = {
  readonly equals?: TSGQLMaybeArray<string> | null;
  readonly has?: string | null;
  readonly hasEvery?: TSGQLMaybeArray<string> | null;
  readonly hasSome?: TSGQLMaybeArray<string> | null;
  readonly isEmpty?: boolean | null;
};

export type StringNullableWithAggregatesFilter = {
  readonly _count?: NestedIntNullableFilter | null;
  readonly _max?: NestedStringNullableFilter | null;
  readonly _min?: NestedStringNullableFilter | null;
  readonly contains?: string | null;
  readonly endsWith?: string | null;
  readonly equals?: string | null;
  readonly gt?: string | null;
  readonly gte?: string | null;
  readonly in?: TSGQLMaybeArray<string> | null;
  readonly isSet?: boolean | null;
  readonly lt?: string | null;
  readonly lte?: string | null;
  readonly mode?: QueryMode | null;
  readonly not?: NestedStringNullableWithAggregatesFilter | null;
  readonly notIn?: TSGQLMaybeArray<string> | null;
  readonly startsWith?: string | null;
};

export type StringWithAggregatesFilter = {
  readonly _count?: NestedIntFilter | null;
  readonly _max?: NestedStringFilter | null;
  readonly _min?: NestedStringFilter | null;
  readonly contains?: string | null;
  readonly endsWith?: string | null;
  readonly equals?: string | null;
  readonly gt?: string | null;
  readonly gte?: string | null;
  readonly in?: TSGQLMaybeArray<string> | null;
  readonly lt?: string | null;
  readonly lte?: string | null;
  readonly mode?: QueryMode | null;
  readonly not?: NestedStringWithAggregatesFilter | null;
  readonly notIn?: TSGQLMaybeArray<string> | null;
  readonly startsWith?: string | null;
};

export type TagCountOrderByAggregateInput = {
  readonly id?: SortOrder | null;
  readonly name?: SortOrder | null;
  readonly postIDs?: SortOrder | null;
};

export type TagCreateInput = {
  readonly id?: string | null;
  readonly name: string;
  readonly postIDs?: TagCreatepostIDsInput | null;
  readonly posts?: PostCreateNestedManyWithoutTagsInput | null;
};

export type TagCreateManyInput = {
  readonly id?: string | null;
  readonly name: string;
  readonly postIDs?: TagCreatepostIDsInput | null;
};

export type TagCreateNestedManyWithoutPostsInput = {
  readonly connect?: TSGQLMaybeArray<TagWhereUniqueInput> | null;
  readonly connectOrCreate?: TSGQLMaybeArray<TagCreateOrConnectWithoutPostsInput> | null;
  readonly create?: TSGQLMaybeArray<TagCreateWithoutPostsInput> | null;
};

export type TagCreateOrConnectWithoutPostsInput = {
  readonly create: TagCreateWithoutPostsInput;
  readonly where: TagWhereUniqueInput;
};

export type TagCreateWithoutPostsInput = {
  readonly id?: string | null;
  readonly name: string;
  readonly postIDs?: TagCreatepostIDsInput | null;
};

export type TagCreatepostIDsInput = {
  readonly set: TSGQLMaybeArray<string>;
};

export type TagListRelationFilter = {
  readonly every?: TagWhereInput | null;
  readonly none?: TagWhereInput | null;
  readonly some?: TagWhereInput | null;
};

export type TagMaxOrderByAggregateInput = {
  readonly id?: SortOrder | null;
  readonly name?: SortOrder | null;
};

export type TagMinOrderByAggregateInput = {
  readonly id?: SortOrder | null;
  readonly name?: SortOrder | null;
};

export type TagOrderByRelationAggregateInput = {
  readonly _count?: SortOrder | null;
};

export type TagOrderByWithAggregationInput = {
  readonly _count?: TagCountOrderByAggregateInput | null;
  readonly _max?: TagMaxOrderByAggregateInput | null;
  readonly _min?: TagMinOrderByAggregateInput | null;
  readonly id?: SortOrder | null;
  readonly name?: SortOrder | null;
  readonly postIDs?: SortOrder | null;
};

export type TagOrderByWithRelationInput = {
  readonly id?: SortOrder | null;
  readonly name?: SortOrder | null;
  readonly postIDs?: SortOrder | null;
  readonly posts?: PostOrderByRelationAggregateInput | null;
};

type TagScalarFieldEnum =   | "id"
  | "name"
  | "postIDs";

export type TagScalarWhereInput = {
  readonly AND?: TSGQLMaybeArray<TagScalarWhereInput> | null;
  readonly NOT?: TSGQLMaybeArray<TagScalarWhereInput> | null;
  readonly OR?: TSGQLMaybeArray<TagScalarWhereInput> | null;
  readonly id?: StringFilter | null;
  readonly name?: StringFilter | null;
  readonly postIDs?: StringNullableListFilter | null;
};

export type TagScalarWhereWithAggregatesInput = {
  readonly AND?: TSGQLMaybeArray<TagScalarWhereWithAggregatesInput> | null;
  readonly NOT?: TSGQLMaybeArray<TagScalarWhereWithAggregatesInput> | null;
  readonly OR?: TSGQLMaybeArray<TagScalarWhereWithAggregatesInput> | null;
  readonly id?: StringWithAggregatesFilter | null;
  readonly name?: StringWithAggregatesFilter | null;
  readonly postIDs?: StringNullableListFilter | null;
};

export type TagUpdateInput = {
  readonly name?: StringFieldUpdateOperationsInput | null;
  readonly postIDs?: TagUpdatepostIDsInput | null;
  readonly posts?: PostUpdateManyWithoutTagsNestedInput | null;
};

export type TagUpdateManyMutationInput = {
  readonly name?: StringFieldUpdateOperationsInput | null;
  readonly postIDs?: TagUpdatepostIDsInput | null;
};

export type TagUpdateManyWithWhereWithoutPostsInput = {
  readonly data: TagUpdateManyMutationInput;
  readonly where: TagScalarWhereInput;
};

export type TagUpdateManyWithoutPostsNestedInput = {
  readonly connect?: TSGQLMaybeArray<TagWhereUniqueInput> | null;
  readonly connectOrCreate?: TSGQLMaybeArray<TagCreateOrConnectWithoutPostsInput> | null;
  readonly create?: TSGQLMaybeArray<TagCreateWithoutPostsInput> | null;
  readonly delete?: TSGQLMaybeArray<TagWhereUniqueInput> | null;
  readonly deleteMany?: TSGQLMaybeArray<TagScalarWhereInput> | null;
  readonly disconnect?: TSGQLMaybeArray<TagWhereUniqueInput> | null;
  readonly set?: TSGQLMaybeArray<TagWhereUniqueInput> | null;
  readonly update?: TSGQLMaybeArray<TagUpdateWithWhereUniqueWithoutPostsInput> | null;
  readonly updateMany?: TSGQLMaybeArray<TagUpdateManyWithWhereWithoutPostsInput> | null;
  readonly upsert?: TSGQLMaybeArray<TagUpsertWithWhereUniqueWithoutPostsInput> | null;
};

export type TagUpdateWithWhereUniqueWithoutPostsInput = {
  readonly data: TagUpdateWithoutPostsInput;
  readonly where: TagWhereUniqueInput;
};

export type TagUpdateWithoutPostsInput = {
  readonly name?: StringFieldUpdateOperationsInput | null;
  readonly postIDs?: TagUpdatepostIDsInput | null;
};

export type TagUpdatepostIDsInput = {
  readonly push?: TSGQLMaybeArray<string> | null;
  readonly set?: TSGQLMaybeArray<string> | null;
};

export type TagUpsertWithWhereUniqueWithoutPostsInput = {
  readonly create: TagCreateWithoutPostsInput;
  readonly update: TagUpdateWithoutPostsInput;
  readonly where: TagWhereUniqueInput;
};

export type TagWhereInput = {
  readonly AND?: TSGQLMaybeArray<TagWhereInput> | null;
  readonly NOT?: TSGQLMaybeArray<TagWhereInput> | null;
  readonly OR?: TSGQLMaybeArray<TagWhereInput> | null;
  readonly id?: StringFilter | null;
  readonly name?: StringFilter | null;
  readonly postIDs?: StringNullableListFilter | null;
  readonly posts?: PostListRelationFilter | null;
};

export type TagWhereUniqueInput = {
  readonly id?: string | null;
};

export type UserCountOrderByAggregateInput = {
  readonly email?: SortOrder | null;
  readonly followerIDs?: SortOrder | null;
  readonly followingIDs?: SortOrder | null;
  readonly id?: SortOrder | null;
  readonly likePostIDs?: SortOrder | null;
  readonly name?: SortOrder | null;
  readonly password?: SortOrder | null;
  readonly roles?: SortOrder | null;
};

export type UserCreateInput = {
  readonly comments?: CommentCreateNestedManyWithoutAuthorInput | null;
  readonly email: string;
  readonly followerIDs?: UserCreatefollowerIDsInput | null;
  readonly followers?: UserCreateNestedManyWithoutFollowingInput | null;
  readonly following?: UserCreateNestedManyWithoutFollowersInput | null;
  readonly followingIDs?: UserCreatefollowingIDsInput | null;
  readonly id?: string | null;
  readonly likePostIDs?: UserCreatelikePostIDsInput | null;
  readonly likePosts?: PostCreateNestedManyWithoutLikesInput | null;
  readonly name?: string | null;
  readonly password?: string | null;
  readonly posts?: PostCreateNestedManyWithoutAuthorInput | null;
  readonly roles?: UserCreaterolesInput | null;
};

export type UserCreateManyInput = {
  readonly email: string;
  readonly followerIDs?: UserCreatefollowerIDsInput | null;
  readonly followingIDs?: UserCreatefollowingIDsInput | null;
  readonly id?: string | null;
  readonly likePostIDs?: UserCreatelikePostIDsInput | null;
  readonly name?: string | null;
  readonly password?: string | null;
  readonly roles?: UserCreaterolesInput | null;
};

export type UserCreateNestedManyWithoutFollowersInput = {
  readonly connect?: TSGQLMaybeArray<UserWhereUniqueInput> | null;
  readonly connectOrCreate?: TSGQLMaybeArray<UserCreateOrConnectWithoutFollowersInput> | null;
  readonly create?: TSGQLMaybeArray<UserCreateWithoutFollowersInput> | null;
};

export type UserCreateNestedManyWithoutFollowingInput = {
  readonly connect?: TSGQLMaybeArray<UserWhereUniqueInput> | null;
  readonly connectOrCreate?: TSGQLMaybeArray<UserCreateOrConnectWithoutFollowingInput> | null;
  readonly create?: TSGQLMaybeArray<UserCreateWithoutFollowingInput> | null;
};

export type UserCreateNestedManyWithoutLikePostsInput = {
  readonly connect?: TSGQLMaybeArray<UserWhereUniqueInput> | null;
  readonly connectOrCreate?: TSGQLMaybeArray<UserCreateOrConnectWithoutLikePostsInput> | null;
  readonly create?: TSGQLMaybeArray<UserCreateWithoutLikePostsInput> | null;
};

export type UserCreateNestedOneWithoutCommentsInput = {
  readonly connect?: UserWhereUniqueInput | null;
  readonly connectOrCreate?: UserCreateOrConnectWithoutCommentsInput | null;
  readonly create?: UserCreateWithoutCommentsInput | null;
};

export type UserCreateNestedOneWithoutPostsInput = {
  readonly connect?: UserWhereUniqueInput | null;
  readonly connectOrCreate?: UserCreateOrConnectWithoutPostsInput | null;
  readonly create?: UserCreateWithoutPostsInput | null;
};

export type UserCreateOrConnectWithoutCommentsInput = {
  readonly create: UserCreateWithoutCommentsInput;
  readonly where: UserWhereUniqueInput;
};

export type UserCreateOrConnectWithoutFollowersInput = {
  readonly create: UserCreateWithoutFollowersInput;
  readonly where: UserWhereUniqueInput;
};

export type UserCreateOrConnectWithoutFollowingInput = {
  readonly create: UserCreateWithoutFollowingInput;
  readonly where: UserWhereUniqueInput;
};

export type UserCreateOrConnectWithoutLikePostsInput = {
  readonly create: UserCreateWithoutLikePostsInput;
  readonly where: UserWhereUniqueInput;
};

export type UserCreateOrConnectWithoutPostsInput = {
  readonly create: UserCreateWithoutPostsInput;
  readonly where: UserWhereUniqueInput;
};

export type UserCreateWithoutCommentsInput = {
  readonly email: string;
  readonly followerIDs?: UserCreatefollowerIDsInput | null;
  readonly followers?: UserCreateNestedManyWithoutFollowingInput | null;
  readonly following?: UserCreateNestedManyWithoutFollowersInput | null;
  readonly followingIDs?: UserCreatefollowingIDsInput | null;
  readonly id?: string | null;
  readonly likePostIDs?: UserCreatelikePostIDsInput | null;
  readonly likePosts?: PostCreateNestedManyWithoutLikesInput | null;
  readonly name?: string | null;
  readonly password?: string | null;
  readonly posts?: PostCreateNestedManyWithoutAuthorInput | null;
  readonly roles?: UserCreaterolesInput | null;
};

export type UserCreateWithoutFollowersInput = {
  readonly comments?: CommentCreateNestedManyWithoutAuthorInput | null;
  readonly email: string;
  readonly followerIDs?: UserCreatefollowerIDsInput | null;
  readonly following?: UserCreateNestedManyWithoutFollowersInput | null;
  readonly followingIDs?: UserCreatefollowingIDsInput | null;
  readonly id?: string | null;
  readonly likePostIDs?: UserCreatelikePostIDsInput | null;
  readonly likePosts?: PostCreateNestedManyWithoutLikesInput | null;
  readonly name?: string | null;
  readonly password?: string | null;
  readonly posts?: PostCreateNestedManyWithoutAuthorInput | null;
  readonly roles?: UserCreaterolesInput | null;
};

export type UserCreateWithoutFollowingInput = {
  readonly comments?: CommentCreateNestedManyWithoutAuthorInput | null;
  readonly email: string;
  readonly followerIDs?: UserCreatefollowerIDsInput | null;
  readonly followers?: UserCreateNestedManyWithoutFollowingInput | null;
  readonly followingIDs?: UserCreatefollowingIDsInput | null;
  readonly id?: string | null;
  readonly likePostIDs?: UserCreatelikePostIDsInput | null;
  readonly likePosts?: PostCreateNestedManyWithoutLikesInput | null;
  readonly name?: string | null;
  readonly password?: string | null;
  readonly posts?: PostCreateNestedManyWithoutAuthorInput | null;
  readonly roles?: UserCreaterolesInput | null;
};

export type UserCreateWithoutLikePostsInput = {
  readonly comments?: CommentCreateNestedManyWithoutAuthorInput | null;
  readonly email: string;
  readonly followerIDs?: UserCreatefollowerIDsInput | null;
  readonly followers?: UserCreateNestedManyWithoutFollowingInput | null;
  readonly following?: UserCreateNestedManyWithoutFollowersInput | null;
  readonly followingIDs?: UserCreatefollowingIDsInput | null;
  readonly id?: string | null;
  readonly likePostIDs?: UserCreatelikePostIDsInput | null;
  readonly name?: string | null;
  readonly password?: string | null;
  readonly posts?: PostCreateNestedManyWithoutAuthorInput | null;
  readonly roles?: UserCreaterolesInput | null;
};

export type UserCreateWithoutPostsInput = {
  readonly comments?: CommentCreateNestedManyWithoutAuthorInput | null;
  readonly email: string;
  readonly followerIDs?: UserCreatefollowerIDsInput | null;
  readonly followers?: UserCreateNestedManyWithoutFollowingInput | null;
  readonly following?: UserCreateNestedManyWithoutFollowersInput | null;
  readonly followingIDs?: UserCreatefollowingIDsInput | null;
  readonly id?: string | null;
  readonly likePostIDs?: UserCreatelikePostIDsInput | null;
  readonly likePosts?: PostCreateNestedManyWithoutLikesInput | null;
  readonly name?: string | null;
  readonly password?: string | null;
  readonly roles?: UserCreaterolesInput | null;
};

export type UserCreatefollowerIDsInput = {
  readonly set: TSGQLMaybeArray<string>;
};

export type UserCreatefollowingIDsInput = {
  readonly set: TSGQLMaybeArray<string>;
};

export type UserCreatelikePostIDsInput = {
  readonly set: TSGQLMaybeArray<string>;
};

export type UserCreaterolesInput = {
  readonly set: TSGQLMaybeArray<string>;
};

export type UserListRelationFilter = {
  readonly every?: UserWhereInput | null;
  readonly none?: UserWhereInput | null;
  readonly some?: UserWhereInput | null;
};

export type UserMaxOrderByAggregateInput = {
  readonly email?: SortOrder | null;
  readonly id?: SortOrder | null;
  readonly name?: SortOrder | null;
  readonly password?: SortOrder | null;
};

export type UserMinOrderByAggregateInput = {
  readonly email?: SortOrder | null;
  readonly id?: SortOrder | null;
  readonly name?: SortOrder | null;
  readonly password?: SortOrder | null;
};

export type UserOrderByRelationAggregateInput = {
  readonly _count?: SortOrder | null;
};

export type UserOrderByWithAggregationInput = {
  readonly _count?: UserCountOrderByAggregateInput | null;
  readonly _max?: UserMaxOrderByAggregateInput | null;
  readonly _min?: UserMinOrderByAggregateInput | null;
  readonly email?: SortOrder | null;
  readonly followerIDs?: SortOrder | null;
  readonly followingIDs?: SortOrder | null;
  readonly id?: SortOrder | null;
  readonly likePostIDs?: SortOrder | null;
  readonly name?: SortOrder | null;
  readonly password?: SortOrder | null;
  readonly roles?: SortOrder | null;
};

export type UserOrderByWithRelationInput = {
  readonly comments?: CommentOrderByRelationAggregateInput | null;
  readonly email?: SortOrder | null;
  readonly followerIDs?: SortOrder | null;
  readonly followers?: UserOrderByRelationAggregateInput | null;
  readonly following?: UserOrderByRelationAggregateInput | null;
  readonly followingIDs?: SortOrder | null;
  readonly id?: SortOrder | null;
  readonly likePostIDs?: SortOrder | null;
  readonly likePosts?: PostOrderByRelationAggregateInput | null;
  readonly name?: SortOrder | null;
  readonly password?: SortOrder | null;
  readonly posts?: PostOrderByRelationAggregateInput | null;
  readonly roles?: SortOrder | null;
};

export type UserRelationFilter = {
  readonly is?: UserWhereInput | null;
  readonly isNot?: UserWhereInput | null;
};

type UserScalarFieldEnum =   | "email"
  | "followerIDs"
  | "followingIDs"
  | "id"
  | "likePostIDs"
  | "name"
  | "password"
  | "roles";

export type UserScalarWhereInput = {
  readonly AND?: TSGQLMaybeArray<UserScalarWhereInput> | null;
  readonly NOT?: TSGQLMaybeArray<UserScalarWhereInput> | null;
  readonly OR?: TSGQLMaybeArray<UserScalarWhereInput> | null;
  readonly email?: StringFilter | null;
  readonly followerIDs?: StringNullableListFilter | null;
  readonly followingIDs?: StringNullableListFilter | null;
  readonly id?: StringFilter | null;
  readonly likePostIDs?: StringNullableListFilter | null;
  readonly name?: StringNullableFilter | null;
  readonly password?: StringNullableFilter | null;
  readonly roles?: StringNullableListFilter | null;
};

export type UserScalarWhereWithAggregatesInput = {
  readonly AND?: TSGQLMaybeArray<UserScalarWhereWithAggregatesInput> | null;
  readonly NOT?: TSGQLMaybeArray<UserScalarWhereWithAggregatesInput> | null;
  readonly OR?: TSGQLMaybeArray<UserScalarWhereWithAggregatesInput> | null;
  readonly email?: StringWithAggregatesFilter | null;
  readonly followerIDs?: StringNullableListFilter | null;
  readonly followingIDs?: StringNullableListFilter | null;
  readonly id?: StringWithAggregatesFilter | null;
  readonly likePostIDs?: StringNullableListFilter | null;
  readonly name?: StringNullableWithAggregatesFilter | null;
  readonly password?: StringNullableWithAggregatesFilter | null;
  readonly roles?: StringNullableListFilter | null;
};

export type UserUpdateInput = {
  readonly comments?: CommentUpdateManyWithoutAuthorNestedInput | null;
  readonly email?: StringFieldUpdateOperationsInput | null;
  readonly followerIDs?: UserUpdatefollowerIDsInput | null;
  readonly followers?: UserUpdateManyWithoutFollowingNestedInput | null;
  readonly following?: UserUpdateManyWithoutFollowersNestedInput | null;
  readonly followingIDs?: UserUpdatefollowingIDsInput | null;
  readonly likePostIDs?: UserUpdatelikePostIDsInput | null;
  readonly likePosts?: PostUpdateManyWithoutLikesNestedInput | null;
  readonly name?: NullableStringFieldUpdateOperationsInput | null;
  readonly password?: NullableStringFieldUpdateOperationsInput | null;
  readonly posts?: PostUpdateManyWithoutAuthorNestedInput | null;
  readonly roles?: UserUpdaterolesInput | null;
};

export type UserUpdateManyMutationInput = {
  readonly email?: StringFieldUpdateOperationsInput | null;
  readonly followerIDs?: UserUpdatefollowerIDsInput | null;
  readonly followingIDs?: UserUpdatefollowingIDsInput | null;
  readonly likePostIDs?: UserUpdatelikePostIDsInput | null;
  readonly name?: NullableStringFieldUpdateOperationsInput | null;
  readonly password?: NullableStringFieldUpdateOperationsInput | null;
  readonly roles?: UserUpdaterolesInput | null;
};

export type UserUpdateManyWithWhereWithoutFollowersInput = {
  readonly data: UserUpdateManyMutationInput;
  readonly where: UserScalarWhereInput;
};

export type UserUpdateManyWithWhereWithoutFollowingInput = {
  readonly data: UserUpdateManyMutationInput;
  readonly where: UserScalarWhereInput;
};

export type UserUpdateManyWithWhereWithoutLikePostsInput = {
  readonly data: UserUpdateManyMutationInput;
  readonly where: UserScalarWhereInput;
};

export type UserUpdateManyWithoutFollowersNestedInput = {
  readonly connect?: TSGQLMaybeArray<UserWhereUniqueInput> | null;
  readonly connectOrCreate?: TSGQLMaybeArray<UserCreateOrConnectWithoutFollowersInput> | null;
  readonly create?: TSGQLMaybeArray<UserCreateWithoutFollowersInput> | null;
  readonly delete?: TSGQLMaybeArray<UserWhereUniqueInput> | null;
  readonly deleteMany?: TSGQLMaybeArray<UserScalarWhereInput> | null;
  readonly disconnect?: TSGQLMaybeArray<UserWhereUniqueInput> | null;
  readonly set?: TSGQLMaybeArray<UserWhereUniqueInput> | null;
  readonly update?: TSGQLMaybeArray<UserUpdateWithWhereUniqueWithoutFollowersInput> | null;
  readonly updateMany?: TSGQLMaybeArray<UserUpdateManyWithWhereWithoutFollowersInput> | null;
  readonly upsert?: TSGQLMaybeArray<UserUpsertWithWhereUniqueWithoutFollowersInput> | null;
};

export type UserUpdateManyWithoutFollowingNestedInput = {
  readonly connect?: TSGQLMaybeArray<UserWhereUniqueInput> | null;
  readonly connectOrCreate?: TSGQLMaybeArray<UserCreateOrConnectWithoutFollowingInput> | null;
  readonly create?: TSGQLMaybeArray<UserCreateWithoutFollowingInput> | null;
  readonly delete?: TSGQLMaybeArray<UserWhereUniqueInput> | null;
  readonly deleteMany?: TSGQLMaybeArray<UserScalarWhereInput> | null;
  readonly disconnect?: TSGQLMaybeArray<UserWhereUniqueInput> | null;
  readonly set?: TSGQLMaybeArray<UserWhereUniqueInput> | null;
  readonly update?: TSGQLMaybeArray<UserUpdateWithWhereUniqueWithoutFollowingInput> | null;
  readonly updateMany?: TSGQLMaybeArray<UserUpdateManyWithWhereWithoutFollowingInput> | null;
  readonly upsert?: TSGQLMaybeArray<UserUpsertWithWhereUniqueWithoutFollowingInput> | null;
};

export type UserUpdateManyWithoutLikePostsNestedInput = {
  readonly connect?: TSGQLMaybeArray<UserWhereUniqueInput> | null;
  readonly connectOrCreate?: TSGQLMaybeArray<UserCreateOrConnectWithoutLikePostsInput> | null;
  readonly create?: TSGQLMaybeArray<UserCreateWithoutLikePostsInput> | null;
  readonly delete?: TSGQLMaybeArray<UserWhereUniqueInput> | null;
  readonly deleteMany?: TSGQLMaybeArray<UserScalarWhereInput> | null;
  readonly disconnect?: TSGQLMaybeArray<UserWhereUniqueInput> | null;
  readonly set?: TSGQLMaybeArray<UserWhereUniqueInput> | null;
  readonly update?: TSGQLMaybeArray<UserUpdateWithWhereUniqueWithoutLikePostsInput> | null;
  readonly updateMany?: TSGQLMaybeArray<UserUpdateManyWithWhereWithoutLikePostsInput> | null;
  readonly upsert?: TSGQLMaybeArray<UserUpsertWithWhereUniqueWithoutLikePostsInput> | null;
};

export type UserUpdateOneRequiredWithoutCommentsNestedInput = {
  readonly connect?: UserWhereUniqueInput | null;
  readonly connectOrCreate?: UserCreateOrConnectWithoutCommentsInput | null;
  readonly create?: UserCreateWithoutCommentsInput | null;
  readonly update?: UserUpdateWithoutCommentsInput | null;
  readonly upsert?: UserUpsertWithoutCommentsInput | null;
};

export type UserUpdateOneRequiredWithoutPostsNestedInput = {
  readonly connect?: UserWhereUniqueInput | null;
  readonly connectOrCreate?: UserCreateOrConnectWithoutPostsInput | null;
  readonly create?: UserCreateWithoutPostsInput | null;
  readonly update?: UserUpdateWithoutPostsInput | null;
  readonly upsert?: UserUpsertWithoutPostsInput | null;
};

export type UserUpdateWithWhereUniqueWithoutFollowersInput = {
  readonly data: UserUpdateWithoutFollowersInput;
  readonly where: UserWhereUniqueInput;
};

export type UserUpdateWithWhereUniqueWithoutFollowingInput = {
  readonly data: UserUpdateWithoutFollowingInput;
  readonly where: UserWhereUniqueInput;
};

export type UserUpdateWithWhereUniqueWithoutLikePostsInput = {
  readonly data: UserUpdateWithoutLikePostsInput;
  readonly where: UserWhereUniqueInput;
};

export type UserUpdateWithoutCommentsInput = {
  readonly email?: StringFieldUpdateOperationsInput | null;
  readonly followerIDs?: UserUpdatefollowerIDsInput | null;
  readonly followers?: UserUpdateManyWithoutFollowingNestedInput | null;
  readonly following?: UserUpdateManyWithoutFollowersNestedInput | null;
  readonly followingIDs?: UserUpdatefollowingIDsInput | null;
  readonly likePostIDs?: UserUpdatelikePostIDsInput | null;
  readonly likePosts?: PostUpdateManyWithoutLikesNestedInput | null;
  readonly name?: NullableStringFieldUpdateOperationsInput | null;
  readonly password?: NullableStringFieldUpdateOperationsInput | null;
  readonly posts?: PostUpdateManyWithoutAuthorNestedInput | null;
  readonly roles?: UserUpdaterolesInput | null;
};

export type UserUpdateWithoutFollowersInput = {
  readonly comments?: CommentUpdateManyWithoutAuthorNestedInput | null;
  readonly email?: StringFieldUpdateOperationsInput | null;
  readonly followerIDs?: UserUpdatefollowerIDsInput | null;
  readonly following?: UserUpdateManyWithoutFollowersNestedInput | null;
  readonly followingIDs?: UserUpdatefollowingIDsInput | null;
  readonly likePostIDs?: UserUpdatelikePostIDsInput | null;
  readonly likePosts?: PostUpdateManyWithoutLikesNestedInput | null;
  readonly name?: NullableStringFieldUpdateOperationsInput | null;
  readonly password?: NullableStringFieldUpdateOperationsInput | null;
  readonly posts?: PostUpdateManyWithoutAuthorNestedInput | null;
  readonly roles?: UserUpdaterolesInput | null;
};

export type UserUpdateWithoutFollowingInput = {
  readonly comments?: CommentUpdateManyWithoutAuthorNestedInput | null;
  readonly email?: StringFieldUpdateOperationsInput | null;
  readonly followerIDs?: UserUpdatefollowerIDsInput | null;
  readonly followers?: UserUpdateManyWithoutFollowingNestedInput | null;
  readonly followingIDs?: UserUpdatefollowingIDsInput | null;
  readonly likePostIDs?: UserUpdatelikePostIDsInput | null;
  readonly likePosts?: PostUpdateManyWithoutLikesNestedInput | null;
  readonly name?: NullableStringFieldUpdateOperationsInput | null;
  readonly password?: NullableStringFieldUpdateOperationsInput | null;
  readonly posts?: PostUpdateManyWithoutAuthorNestedInput | null;
  readonly roles?: UserUpdaterolesInput | null;
};

export type UserUpdateWithoutLikePostsInput = {
  readonly comments?: CommentUpdateManyWithoutAuthorNestedInput | null;
  readonly email?: StringFieldUpdateOperationsInput | null;
  readonly followerIDs?: UserUpdatefollowerIDsInput | null;
  readonly followers?: UserUpdateManyWithoutFollowingNestedInput | null;
  readonly following?: UserUpdateManyWithoutFollowersNestedInput | null;
  readonly followingIDs?: UserUpdatefollowingIDsInput | null;
  readonly likePostIDs?: UserUpdatelikePostIDsInput | null;
  readonly name?: NullableStringFieldUpdateOperationsInput | null;
  readonly password?: NullableStringFieldUpdateOperationsInput | null;
  readonly posts?: PostUpdateManyWithoutAuthorNestedInput | null;
  readonly roles?: UserUpdaterolesInput | null;
};

export type UserUpdateWithoutPostsInput = {
  readonly comments?: CommentUpdateManyWithoutAuthorNestedInput | null;
  readonly email?: StringFieldUpdateOperationsInput | null;
  readonly followerIDs?: UserUpdatefollowerIDsInput | null;
  readonly followers?: UserUpdateManyWithoutFollowingNestedInput | null;
  readonly following?: UserUpdateManyWithoutFollowersNestedInput | null;
  readonly followingIDs?: UserUpdatefollowingIDsInput | null;
  readonly likePostIDs?: UserUpdatelikePostIDsInput | null;
  readonly likePosts?: PostUpdateManyWithoutLikesNestedInput | null;
  readonly name?: NullableStringFieldUpdateOperationsInput | null;
  readonly password?: NullableStringFieldUpdateOperationsInput | null;
  readonly roles?: UserUpdaterolesInput | null;
};

export type UserUpdatefollowerIDsInput = {
  readonly push?: TSGQLMaybeArray<string> | null;
  readonly set?: TSGQLMaybeArray<string> | null;
};

export type UserUpdatefollowingIDsInput = {
  readonly push?: TSGQLMaybeArray<string> | null;
  readonly set?: TSGQLMaybeArray<string> | null;
};

export type UserUpdatelikePostIDsInput = {
  readonly push?: TSGQLMaybeArray<string> | null;
  readonly set?: TSGQLMaybeArray<string> | null;
};

export type UserUpdaterolesInput = {
  readonly push?: TSGQLMaybeArray<string> | null;
  readonly set?: TSGQLMaybeArray<string> | null;
};

export type UserUpsertWithWhereUniqueWithoutFollowersInput = {
  readonly create: UserCreateWithoutFollowersInput;
  readonly update: UserUpdateWithoutFollowersInput;
  readonly where: UserWhereUniqueInput;
};

export type UserUpsertWithWhereUniqueWithoutFollowingInput = {
  readonly create: UserCreateWithoutFollowingInput;
  readonly update: UserUpdateWithoutFollowingInput;
  readonly where: UserWhereUniqueInput;
};

export type UserUpsertWithWhereUniqueWithoutLikePostsInput = {
  readonly create: UserCreateWithoutLikePostsInput;
  readonly update: UserUpdateWithoutLikePostsInput;
  readonly where: UserWhereUniqueInput;
};

export type UserUpsertWithoutCommentsInput = {
  readonly create: UserCreateWithoutCommentsInput;
  readonly update: UserUpdateWithoutCommentsInput;
};

export type UserUpsertWithoutPostsInput = {
  readonly create: UserCreateWithoutPostsInput;
  readonly update: UserUpdateWithoutPostsInput;
};

export type UserWhereInput = {
  readonly AND?: TSGQLMaybeArray<UserWhereInput> | null;
  readonly NOT?: TSGQLMaybeArray<UserWhereInput> | null;
  readonly OR?: TSGQLMaybeArray<UserWhereInput> | null;
  readonly comments?: CommentListRelationFilter | null;
  readonly email?: StringFilter | null;
  readonly followerIDs?: StringNullableListFilter | null;
  readonly followers?: UserListRelationFilter | null;
  readonly following?: UserListRelationFilter | null;
  readonly followingIDs?: StringNullableListFilter | null;
  readonly id?: StringFilter | null;
  readonly likePostIDs?: StringNullableListFilter | null;
  readonly likePosts?: PostListRelationFilter | null;
  readonly name?: StringNullableFilter | null;
  readonly password?: StringNullableFilter | null;
  readonly posts?: PostListRelationFilter | null;
  readonly roles?: StringNullableListFilter | null;
};

export type UserWhereUniqueInput = {
  readonly email?: string | null;
  readonly id?: string | null;
};

type TSGQLMaybeArray<T> = ReadonlyArray<T> | T

export {};
export interface TSGQLDocuments extends Record<string, import('@ts-gql/tag').TypedDocumentNode<import('@ts-gql/tag').BaseDocumentTypes>> {}

export type TSGQLRequiredFragments<T> = (providedFragments: T) => T;