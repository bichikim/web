name: Build and Deploy
on:
  push:
    branches:
      - dev
env:
  PNPM_VERSION: 7.1.0
  NODE_VERSION: 16
  GCP_SERVICE_NAME: coong
  PROJECT_CLIENT_PATH: coong/coong-client
  ARTIFACT_CLIENT_NAME: dist-client
jobs:
  build-client:
    name: Build Client
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@master

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Prepare Pnpm
        uses: pnpm/action-setup@v2.0.1
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Cache pnpm modules
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-store
          # key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          key: ${{ runner.os }}
          restore-keys: |
            ${{ runner.os }}

      - name: Install Dependencies
        run: pnpm install

      - name: Build
        run: pnpm run build:coong-client

      - name: Archive Production Artifact
        uses: actions/upload-artifact@master
        with:
          retention-days: 1
          name: ${{ env.ARTIFACT_CLIENT_NAME }}
          path: |
            ${{ env.PROJECT_CLIENT_PATH }}/dist

  deploy-client:
    name: Deploy Client
    needs: build-client
    runs-on: ubuntu-latest
    # only master
    if: ${{ github.ref == 'refs/heads/master' && needs.build-client.outputs.run_job == 'true' }}
    env:
      DESTINATION: coong-static-production
    steps:
      - name: Checkout Repo
        uses: actions/checkout@master

      - name: Download Artifact
        uses: actions/download-artifact@master
        with:
          name: ${{ env.ARTIFACT_CLIENT_NAME }}
          path: ${{ env.PROJECT_CLIENT_PATH }}/dist

      - id: auth
        name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v0
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}

      - id: upload-file
        uses: google-github-actions/upload-cloud-storage@v0
        with:
          path: ${{ env.PROJECT_CLIENT_PATH }}/dist
          destination: ${{ env.DESTINATION }}/web
